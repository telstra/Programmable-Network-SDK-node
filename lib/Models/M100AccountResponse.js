/**
 * TelstraProgrammableNetworkAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of M100AccountResponse
 */
class M100AccountResponse extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.phone = this.constructor.getValue(obj.phone);
        this.city = this.constructor.getValue(obj.city);
        this.fax = this.constructor.getValue(obj.fax);
        this.country = this.constructor.getValue(obj.country);
        this.address = this.constructor.getValue(obj.address);
        this.state = this.constructor.getValue(obj.state);
        this.website = this.constructor.getValue(obj.website);
        this.companyuuid = this.constructor.getValue(obj.companyuuid);
        this.companyname = this.constructor.getValue(obj.companyname);
        this.postalcode = this.constructor.getValue(obj.postalcode);
        this.customertype = this.constructor.getValue(obj.customertype);
        this.status = this.constructor.getValue(obj.status);
        this.customeraccountid = this.constructor.getValue(obj.customeraccountid);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'phone', realName: 'phone' },
            { name: 'city', realName: 'city' },
            { name: 'fax', realName: 'fax' },
            { name: 'country', realName: 'country' },
            { name: 'address', realName: 'address' },
            { name: 'state', realName: 'state' },
            { name: 'website', realName: 'website' },
            { name: 'companyuuid', realName: 'companyuuid' },
            { name: 'companyname', realName: 'companyname' },
            { name: 'postalcode', realName: 'postalcode' },
            { name: 'customertype', realName: 'customertype' },
            { name: 'status', realName: 'status' },
            { name: 'customeraccountid', realName: 'customeraccountid' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = M100AccountResponse;
