/**
 * TelstraProgrammableNetworkAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const Role = require('../lib/Models/Role');
const Billing = require('../lib/Models/Billing');
const Link66 = require('../lib/Models/Link66');
const Endpoint = require('../lib/Models/Endpoint');
const Ttms100TopologyTagRequest = require('../lib/Models/Ttms100TopologyTagRequest');
const M100InventoryLinksContractResponse =
  require('../lib/Models/M100InventoryLinksContractResponse');
const VnfTag = require('../lib/Models/VnfTag');
const Classification = require('../lib/Models/Classification');
const M100MarketplaceImageResponse = require('../lib/Models/M100MarketplaceImageResponse');
const M100InventoryRegularvportRequest = require('../lib/Models/M100InventoryRegularvportRequest');
const M100InventoryVnfVportResponse = require('../lib/Models/M100InventoryVnfVportResponse');
const M100InventoryVnfVportRequest = require('../lib/Models/M100InventoryVnfVportRequest');
const M100InventoryLinksContractRequest =
  require('../lib/Models/M100InventoryLinksContractRequest');
const SuccessFragment = require('../lib/Models/SuccessFragment');
const M100InventoryRegularendpointRequest =
  require('../lib/Models/M100InventoryRegularendpointRequest');
const Vlan = require('../lib/Models/Vlan');
const Datacenter = require('../lib/Models/Datacenter');
const Endpointlist = require('../lib/Models/Endpointlist');
const Eis100EndpointsAssignTopologyTagRequest =
  require('../lib/Models/Eis100EndpointsAssignTopologyTagRequest');
const Vportvalue = require('../lib/Models/Vportvalue');
const M100InventoryEndpointResponse = require('../lib/Models/M100InventoryEndpointResponse');
const M100InventoryEndpointsCustomeruuidResponse =
  require('../lib/Models/M100InventoryEndpointsCustomeruuidResponse');
const Object52 = require('../lib/Models/Object52');
const M100AuthValidatetokenResponse = require('../lib/Models/M100AuthValidatetokenResponse');
const User = require('../lib/Models/User');
const M100AuthGeneratetokenResponse = require('../lib/Models/M100AuthGeneratetokenResponse');
const Ttms100TopologyTagObjectsResponse =
  require('../lib/Models/Ttms100TopologyTagObjectsResponse');
const GlanceImage = require('../lib/Models/GlanceImage');
const Meta = require('../lib/Models/Meta');
const M100AccountResponse = require('../lib/Models/M100AccountResponse');
const M100InventoryRegularvportResponse =
  require('../lib/Models/M100InventoryRegularvportResponse');
const Params39 = require('../lib/Models/Params39');
const M100InventoryLinksContractResponse38 =
  require('../lib/Models/M100InventoryLinksContractResponse38');
const M100InventoryLinksContractRequest37 =
  require('../lib/Models/M100InventoryLinksContractRequest37');
const Params34 = require('../lib/Models/Params34');
const Topology = require('../lib/Models/Topology');
const M100InventoryLinksContractResponse33 =
  require('../lib/Models/M100InventoryLinksContractResponse33');
const Flavor = require('../lib/Models/Flavor');
const M100InventoryLinksResponse = require('../lib/Models/M100InventoryLinksResponse');
const M100InventoryLinksHistoryResponse =
  require('../lib/Models/M100InventoryLinksHistoryResponse');
const Contract = require('../lib/Models/Contract');
const M100InventoryLinkResponse = require('../lib/Models/M100InventoryLinkResponse');
const Link = require('../lib/Models/Link');
const M100InventoryRegularendpointResponse =
  require('../lib/Models/M100InventoryRegularendpointResponse');
const M100InventoryVnfendpointResponse = require('../lib/Models/M100InventoryVnfendpointResponse');
const M100InventoryVnfendpointRequest = require('../lib/Models/M100InventoryVnfendpointRequest');
const Params = require('../lib/Models/Params');
const M100InventoryLinkRequest = require('../lib/Models/M100InventoryLinkRequest');
const Vport = require('../lib/Models/Vport');
const Product = require('../lib/Models/Product');
const EndpointPort = require('../lib/Models/EndpointPort');
const M100InventoryDatacentersResponse = require('../lib/Models/M100InventoryDatacentersResponse');
const Params31 = require('../lib/Models/Params31');
const M100InventoryDatacenters401ErrorException =
  require('../lib/Exceptions/M100InventoryDatacenters401ErrorException');
const ErrorException = require('../lib/Exceptions/ErrorException');

const classMap = {
    Role,
    Billing,
    Link66,
    Endpoint,
    Ttms100TopologyTagRequest,
    M100InventoryLinksContractResponse,
    VnfTag,
    Classification,
    M100MarketplaceImageResponse,
    M100InventoryRegularvportRequest,
    M100InventoryVnfVportResponse,
    M100InventoryVnfVportRequest,
    M100InventoryLinksContractRequest,
    SuccessFragment,
    M100InventoryRegularendpointRequest,
    Vlan,
    Datacenter,
    Endpointlist,
    Eis100EndpointsAssignTopologyTagRequest,
    Vportvalue,
    M100InventoryEndpointResponse,
    M100InventoryEndpointsCustomeruuidResponse,
    Object52,
    M100AuthValidatetokenResponse,
    User,
    M100AuthGeneratetokenResponse,
    Ttms100TopologyTagObjectsResponse,
    GlanceImage,
    Meta,
    M100AccountResponse,
    M100InventoryRegularvportResponse,
    Params39,
    M100InventoryLinksContractResponse38,
    M100InventoryLinksContractRequest37,
    Params34,
    Topology,
    M100InventoryLinksContractResponse33,
    Flavor,
    M100InventoryLinksResponse,
    M100InventoryLinksHistoryResponse,
    Contract,
    M100InventoryLinkResponse,
    Link,
    M100InventoryRegularendpointResponse,
    M100InventoryVnfendpointResponse,
    M100InventoryVnfendpointRequest,
    Params,
    M100InventoryLinkRequest,
    Vport,
    Product,
    EndpointPort,
    M100InventoryDatacentersResponse,
    Params31,
    M100InventoryDatacenters401ErrorException,
    ErrorException,
};

/**
 * Factory class to create instances of models and exception classes
 */
class ModelFactory {
    /**
     * Creates instance of a model class
     * @param  modelName  {string}  Name of class to instantiate
     * @returns  {object} Instance of the model class
     */
    static getInstance(modelName) {
        return new classMap[modelName]();
    }
}

module.exports = ModelFactory;
